import htmlMinify, { type Options as HtmlMinifyOptions } from 'html-minifier-terser'
import { type IndexHtmlTransformContext, type Plugin } from 'vite'
import { addDefaultValues } from './utils'

export type { HtmlMinifyOptions }

export const defaultHtmlMinifyOptions: HtmlMinifyOptions = {
  includeAutoGeneratedTags: true,
  removeAttributeQuotes: true,
  removeComments: true,
  removeRedundantAttributes: true,
  removeScriptTypeAttributes: true,
  removeStyleLinkTypeAttributes: true,
  sortClassName: true,
  useShortDoctype: true,
  collapseWhitespace: true,
  collapseInlineTagWhitespace: true,
  removeEmptyAttributes: true,
  removeOptionalTags: true,
  sortAttributes: true,
}

/**
 * Creates a Vite plugin that minifies HTML files.
 *
 * @param options - HTML minification options
 * @returns The HTML minify plugin
 */
export function htmlMinifyPlugin(options?: HtmlMinifyOptions): Plugin {
  const fullOptions = addDefaultValues(options, defaultHtmlMinifyOptions)

  return {
    name: 'vite:html-minify',
    transformIndexHtml: {
      handler: async (html: string, ctx?: IndexHtmlTransformContext): Promise<string> => {
        // Only minify during build
        if (!ctx || !ctx.bundle) {
          return html
        }

        return await htmlMinify.minify(html, fullOptions)
      },
    },
  }
}
